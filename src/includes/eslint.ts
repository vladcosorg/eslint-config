import { defineConfig } from 'eslint/config'

import js from '@eslint/js'

export const eslintConfig = defineConfig(
  {
    extends: ['js/recommended'],
    files: ['**/*.js', '**/*.cjs', '**.*.mjs'],
    plugins: { js },
    rules: {
      'arrow-body-style': ['warn', 'as-needed'],
      camelcase: ['warn'],
      'class-methods-use-this': 'warn',
      complexity: ['warn'],
      'consistent-return': ['warn', { treatUndefinedAsUnspecified: true }],
      'consistent-this': ['error', 'that'],
      curly: ['warn'],
      'default-case': 'warn',
      'default-case-last': 'warn',
      'default-param-last': 'warn',
      'dot-notation': ['warn'],
      'func-style': ['error', 'declaration', { allowArrowFunctions: true }],
      'grouped-accessor-pairs': 'warn',
      'guard-for-in': 'warn',
      'logical-assignment-operators': 'warn',
      'new-cap': 'warn',
      'no-alert': 'warn',
      'no-array-constructor': 'error',
      'no-await-in-loop': 'error',
      'no-confusing-arrow': 'warn',
      'no-console': 'warn',
      'no-constant-condition': 'warn',
      'no-constructor-return': 'error',
      'no-else-return': 'warn',
      'no-empty-function': 'warn',
      'no-extend-native': 'warn',
      'no-implicit-coercion': 'warn',
      'no-lonely-if': 'warn',
      'no-multi-assign': 'warn',
      'no-negated-condition': 'warn',
      'no-nested-ternary': 'warn',
      'no-new-native-nonconstructor': 'error',
      'no-promise-executor-return': 'warn',
      'no-return-await': 'warn',
      'no-self-compare': 'error',
      'no-shadow': 'warn',
      'no-throw-literal': 'warn',
      'no-unneeded-ternary': 'warn',
      'no-unreachable-loop': 'warn',
      'no-unused-expressions': 'warn',
      'no-unused-private-class-members': 'warn',
      'no-use-before-define': 'warn',
      'no-useless-catch': 'warn',
      'no-useless-return': 'warn',
      'no-var': 'error',
      'no-void': ['error', { allowAsStatement: true }],
      'object-shorthand': 'warn',
      'prefer-arrow-callback': 'warn',
      'prefer-const': 'warn',
      'prefer-object-has-own': 'warn',
      'prefer-object-spread': 'warn',
      'prefer-template': 'warn',
      'quote-props': ['warn', 'as-needed'],
      'require-await': 'warn',
    },
  },
  {
    files: ['*.test.ts'],
    rules: {
      'no-unused-expressions': 'off',
    },
  },
)
